-- create database lms;
create database if not exists lms;
create schema lms;
--
create table
  lms.admin (
    admin_id bigint generated by default as identity,
    created_at timestamp without time zone not null,
    first_name character varying null,
    last_name character varying null,
    phone_no character varying null,
    email character varying null,
    password character varying null,
    constraint admin_pkey primary key (admin_id),
    constraint admin_phone_no_key unique (phone_no),
    constraint admin_email_key unique (email)
  ) tablespace pg_default;
--

create trigger handle_updated_at before
update on lms.admin for each row
execute function lms.moddatetime ('updated_at');
create table
  lms.department (
    department_id bigint generated by default as identity,
    created_at timestamp without time zone not null,
    department_name character varying null,
    head_of_department character varying null,
    updated_at timestamp without time zone null,
    constraint department_pkey primary key (department_id)
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.department for each row
execute function lms.moddatetime ('updated_at');

--

create table
  lms.courses (
    course_id bigint generated by default as identity,
    created_at timestamp without time zone not null,
    course_name character varying null,
    description text null,
    total_years smallint null,
    status text null default 'active'::text,
    department_id bigint null,
    constraint courses_pkey primary key (course_id),
    constraint courses_department_id_fkey foreign key (department_id) references lms.department (department_id) on update cascade on delete cascade
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.courses for each row
execute function lms.moddatetime ('updated_at');

--
create table
  lms.semesters (
    semester_id bigint generated by default as identity,
    created_at timestamp without time zone not null,
    year smallint null,
    semester_no smallint null,
    duration character varying null,
    status text null default 'active'::text,
    course_id bigint null,
    constraint semesters_pkey primary key (semester_id),
    constraint semesters_course_id_fkey foreign key (course_id) references lms.courses (course_id) on update cascade on delete cascade
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.semesters for each row
execute function lms.moddatetime ('updated_at');

--
create table
  lms.staffs (
    staff_id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    first_name character varying null,
    last_name character varying null,
    email character varying null,
    phone_no character varying null,
    departement_id bigint null,
    bio text null,
    update_at timestamp without time zone null,
    constraint staffs_pkey primary key (staff_id),
    constraint staffs_email_key unique (email),
    constraint staffs_phone_no_key unique (phone_no),
    constraint staffs_departement_id_fkey foreign key (departement_id) references lms.department (department_id) on update cascade on delete cascade
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.staffs for each row
execute function lms.moddatetime ('updated_at');
--
create table
  lms.students (
    student_id bigint generated by default as identity,
    created_at timestamp without time zone not null,
    first_name character varying null,
    last_name character varying null,
    email character varying null,
    phone_no character varying null,
    dob date null,
    gender character varying null,
    address character varying null,
    password character varying null,
    constraint students_pkey primary key (student_id)
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.students for each row
execute function lms.moddatetime ('updated_at');

--

create table
  lms.enrollments (
    enrollment_id bigint generated by default as identity,
    student_id bigint null,
    course_id bigint null,
    status text null default 'active'::text,
    created_at timestamp without time zone not null,
    updated_at timestamp without time zone null,
    department_id bigint null,
    constraint enrolments_pkey primary key (enrollment_id),
    constraint enrolments_student_id_fkey foreign key (student_id) references lms.students (student_id) on update cascade on delete cascade,
    constraint enrolments_course_id_fkey foreign key (course_id) references lms.courses (course_id) on update cascade on delete cascade,
    constraint enrolments_department_id_fkey foreign key (department_id) references lms.department (department_id)
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.enrollments for each row
execute function lms.moddatetime ('updated_at');

--

create table
  lms.assignments (
    assignment_id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    subject_id bigint null,
    description text null,
    title character varying null,
    due_date date null,
    updated_at timestamp without time zone null default now(),
    status character varying null default 'active'::character varying,
    constraint assignments_pkey primary key (assignment_id),
    constraint assignments_subject_id_fkey foreign key (subject_id) references lms.subjects (subject_id)
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.assignments for each row
execute function lms.moddatetime ('updated_at');

--
create table
  lms.subjects (
    subject_id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    subject_name character varying null,
    description text null,
    staff_id bigint null,
    course_id bigint null,
    status character varying null default 'active'::character varying,
    constraint subjects_pkey primary key (subject_id),
    constraint subjects_staff_id_fkey foreign key (staff_id) references lms.staffs (staff_id),
    constraint subjects_course_id_fkey foreign key (course_id) references lms.courses (course_id) on update cascade on delete cascade
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.subjects for each row
execute function lms.moddatetime ('updated_at');

--
create table
  lms.submissions (
    submission_id bigint generated by default as identity,
    created_at timestamp with time zone not null,
    assignment_id bigint null,
    student_id bigint null,
    submission_date timestamp with time zone null,
    feedback text null,
    updated_at timestamp with time zone null,
    is_late boolean null,
    constraint submissions_pkey primary key (submission_id),
    constraint submissions_assignment_id_fkey foreign key (assignment_id) references lms.assignments (assignment_id),
    constraint submissions_student_id_fkey foreign key (student_id) references lms.students (student_id)
  ) tablespace pg_default;

create trigger handle_updated_at before
update on lms.submissions for each row
execute function lms.moddatetime ();
--